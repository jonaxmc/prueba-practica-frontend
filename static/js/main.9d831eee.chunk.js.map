{"version":3,"sources":["productoReducer.js","components/HomeProductos.js","hooks/useForm.js","actions/acciones.js","index.js"],"names":["productoReducer","state","action","type","payload","filter","producto","id","map","init","JSON","parse","localStorage","getItem","HomeProductos","useState","editing","setEditing","idP","setIdP","useReducer","productos","dispatch","initialState","values","setValues","target","name","value","nombreProducto","useForm","handleInputChange","reset","update","useEffect","setItem","stringify","className","length","onSubmit","e","preventDefault","trim","nombre","nuevoProducto","Date","getTime","accionAgregar","placeholder","autoComplete","onChange","i","onClick","handleBotonEditar","idProducto","accionEliminar","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d831eee.chunk.js","sourcesContent":["\r\nexport const productoReducer =(state = [], action)=>{\r\n\r\n    switch (action.type) {\r\n        case 'agregar':\r\n            return [...state, action.payload];\r\n    \r\n        case 'eliminar':\r\n            return state.filter(producto => producto.id !== action.payload)\r\n\r\n        case 'editar':\r\n            return state.map(producto => (producto.id === action.payload.id) ? action.payload : producto)\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n    \r\n}","import React, { useEffect, useReducer, useState } from 'react'\r\nimport { accionAgregar, accionEditar, accionEliminar } from '../actions/acciones';\r\nimport { useForm } from '../hooks/useForm';\r\nimport { productoReducer } from '../productoReducer';\r\nimport '../styles.css'\r\n\r\n\r\n\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('productos')) || [];\r\n}\r\n\r\n\r\nexport const HomeProductos = () => {\r\n\r\n    const [editing, setEditing] = useState(false)\r\n    const [idP, setIdP] = useState(0)\r\n    const [productos, dispatch] = useReducer(productoReducer, [], init);\r\n\r\n    const [{ nombreProducto }, handleInputChange, reset, update] = useForm({\r\n        nombreProducto: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('productos', JSON.stringify(productos))\r\n    }, [productos])\r\n\r\n    const handleDelete = (idProducto) => {\r\n        dispatch(accionEliminar(idProducto));\r\n    }\r\n\r\n    const handleBotonEditar = (producto) => {\r\n        setIdP(producto.id)\r\n        update(producto.nombre)\r\n        setEditing(true)\r\n\r\n    }\r\n  \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (nombreProducto.trim().length <= 1) {\r\n            return;\r\n        }\r\n\r\n        if(editing){\r\n            const nuevoProducto2 = {\r\n                id: idP,\r\n                nombre: nombreProducto\r\n            };\r\n            dispatch(accionEditar(nuevoProducto2))\r\n            setEditing(false)\r\n\r\n        }else{\r\n\r\n            const nuevoProducto = {\r\n                id: new Date().getTime(),\r\n                nombre: nombreProducto\r\n            };\r\n            dispatch(accionAgregar(nuevoProducto))\r\n        }\r\n\r\n        reset()\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Productos</h1>\r\n            <small>NÃºmero de productos: {productos.length}</small>\r\n            <hr />\r\n            <div className=\"row\">\r\n                <div className=\"col-5\">\r\n                   {\r\n                       editing ? <h4>Editar Producto</h4>:<h4>Agregar Producto</h4>\r\n                   }\r\n                    \r\n                    <hr />\r\n\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"nombreProducto\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Agrega un producto...\"\r\n                            autoComplete=\"off\"\r\n                            onChange={handleInputChange}\r\n                            value={nombreProducto}\r\n                        />\r\n\r\n                    \r\n                     \r\n                                <div className=\"d-grid gap-2 d-md-block\">\r\n                                    <button className=\"btn btn-outline-primary mt-1\" type=\"submit\">Guardar</button>\r\n\r\n                                </div>\r\n\r\n                        \r\n\r\n\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-7\">\r\n                    <ul className=\"list-group list-group-flush\">\r\n                        {\r\n                            productos.map((producto, i) => (\r\n                                <li key={producto.id} className=\"list-group-item animate__animated animate__fadeIn\">\r\n                                    <p className=\"text-center textos\">\r\n                                        {i + 1}. {producto.nombre}\r\n                                    </p>\r\n                                    <div className=\"botones\">\r\n                                        \r\n                                    <button className=\"btn btn-success\" onClick={() => handleBotonEditar(producto)}>Editar</button>\r\n                                    <button className=\"btn btn-danger\" onClick={() => handleDelete(producto.id)}>Eliminar</button>\r\n                                        \r\n                                    </div>\r\n                                </li>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = (initialState ={}) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ()=>{\r\n        setValues(initialState)\r\n    }\r\n\r\n    const update = (value) =>{\r\n        setValues({nombreProducto:value})\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        })\r\n    };\r\n\r\n    return [values, handleInputChange, reset, update];\r\n    \r\n}","\r\n\r\nexport const accionAgregar = (producto) => ({\r\n    type: 'agregar',\r\n    payload: producto\r\n});\r\n\r\nexport const accionEliminar = (idProducto) => ({\r\n    type: 'eliminar',\r\n    payload: idProducto\r\n\r\n});\r\n\r\nexport const accionEditar = (producto) => ({\r\n    type: 'editar',\r\n    payload: producto\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HomeProductos } from './components/HomeProductos';\n\nReactDOM.render(\n\n    <HomeProductos />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}